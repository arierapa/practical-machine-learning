{"name":"Practical-machine-learning-Project-Reprt","tagline":"report","body":"# **Practical Machine Learning - Prediction Assignment Write-up**\r\n\r\n## Background\r\n\r\nUsing devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement â€“ a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. \r\n\r\nIn this project, the goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways. More information is available from the website here: http://groupware.les.inf.puc-rio.br/har (see the section on the Weight Lifting Exercise Dataset). \r\n\r\n\r\n## Data \r\n\r\nThe training data for this project are available here: \r\nhttps://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv\r\n\r\nThe test data are available here: \r\nhttps://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv\r\n\r\nThe data for this project come from this source: http://groupware.les.inf.puc-rio.br/har. If you use the document you create for this class for any purpose please cite them as they have been very generous in allowing their data to be used for this kind of assignment. \r\n\r\n\r\n## Goal\r\n\r\nThe goal of the project is to predict the manner in which they did the exercise. This is the \"classe\" variable in the training set. \r\n\r\n\r\n## Development\r\n\r\n1.- I first loaded the data into the training and testing set. We defined the NA in order to check where there is no information. \r\n\r\n`training<-read.csv(\"pml-training.csv\",na.strings=c(\"NA\",\"#DIV/0!\",\"\"))`\r\n`testing<-read.csv(\"pml-testing.csv\",na.strings=c(\"NA\",\"#DIV/0!\",\"\"))`\r\n\r\n2.- I did some exploratory analysis and cleaning\r\n\r\n`dim(training)`\r\n`#[1] 19622   160`\r\n\r\n`dim(testing)`\r\n`#[1]  20 160`\r\n \r\nThere are 19,622 instances for training with 160 variables, 20 instances for testing.\r\n\r\nI realized that there are many NAs in some variables. The idea is to find the variables that have more than 10,000 NAs and take them out of the data sets (50% of the data).\r\n\r\n`# finding the variables (columns) that have more than 10,000 NA`\r\n`nac<-colSums(is.na(training))>10000`\r\n\r\n`sum(nac)`\r\n`# [1] 100`\r\n\r\nThere are 100 variables where there are more than 10,000 NA .\r\n\r\nI removed the columns (variable) that have more than 10,000 NA\r\n\r\n`training2<-training[,-which(nac==TRUE)]`\r\n\r\nI removed first row that do not have information for predictions\r\n\r\n`training3<-training2[,-1]`\r\n\r\n3.- Fitting a Model\r\n\r\n`library(caret)`\r\n`set.seed(32243)`\r\n\r\nI created the data partitioning\r\n\r\n`inTrain<-createDataPartition(training3$classe,p=0.6,list=FALSE)`\r\n`train <- training3[inTrain,]`\r\n`test<- training3[-inTrain,]`\r\n\r\n\r\n# CART\r\n\r\nThe first model I used is CART model from Caret package.\r\n\r\n`modelFitRP<-train(classe~.,data=train,method=\"rpart\")`\r\n`ModelFitRP`\r\n`# Accuracy = 0.61`\r\n\r\nThe accuracy in this model in the training set is 0.61. I will check in the testing set.\r\n\r\n`predRP<-predict(modelFitRP,newdata=test)`\r\n`confusionMatrix(predRP,test$classe)`\r\n`#Accuracy = 0.63`\r\n\r\nThe accuracy in this model in the testing set is 0.63. It seems there is no overfitting.\r\n\r\n# CART WITH RPART \r\n\r\nI will use now CART model from Rpart package.\r\n\r\n`library(rpart)`\r\n`modelFitRP2<- rpart(classe ~ ., data=train, method=\"class\")`\r\n`predRP2<-predict(modelFitRP2,test,type=\"class\")`\r\n`confusionMatrix(predRP2,test$classe)`\r\n`#Accuracy = 0.87`\r\n\r\nThe accuracy in this model in the testing set is 0.87.\r\n\r\n# RANDOM FOREST\r\n\r\nI will use now Random Forest model from randomForest package.\r\n\r\n`library(randomForest)`\r\n`modelFitRF <- randomForest(classe ~. , data=train)`\r\n`predRF<-predict(modelFitRF,test,type=\"class\")`\r\n`confusionMatrix(predRF,test$classe)`\r\n`#Accuracy = 0.99`\r\n\r\nThe accuracy in this model in the testing set is 0.99.\r\n\r\n\r\n## Conclusions\r\n\r\nIf we compare CART model and Random Forest, the first one provide accuracy of 0.87 and the second one 0.99. We choose Random Forest as the model to evaluate the testing data set.\r\n\r\n`# predicting on the testing data set of 20 instances`\r\n`testing2<-testing[,-which(nac==TRUE)]`\r\n`testing3<-testing2[,-1]`\r\n\r\n`# I had to use the same levels from the training set`\r\n`levels(testing3$cvtd_timestamp) = levels(train$cvtd_timestamp)`\r\n`levels(testing3$new_window) = levels(train$new_window)`\r\n\r\n`predRPt<-predict(modelFitRF,testing3,type=\"class\")`\r\n`answers = as.character(predRPt)`\r\n`answers`\r\n\r\nThese are the predictions for the 20 test cases.\r\n\r\n[1] \"B\" \"A\" \"B\" \"A\" \"A\" \"E\" \"D\" \"B\" \"A\" \"A\" \"B\" \"C\" \"B\" \"A\" \"E\" \"E\" \"A\" \"B\" \"B\"\r\n[20] \"B\"\r\n\r\nI will now created the 20 files for the Course Project Submission:\r\n\r\n`pml_write_files = function(x){`\r\n  `n = length(x)`\r\n  `for(i in 1:n){`\r\n    `filename = paste0(\"problem_id_\",i,\".txt\")`\r\n    `write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)`\r\n  `}`\r\n`}`\r\n`pml_write_files(answers)`\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}